name: Continuous integration
on: [push, pull_request]
env:
  # Bump this number to invalidate the Github-actions cache
  cache-invalidation-key: 0

jobs:
  formatting:
    name: Check formatting
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Setup Cachix
      uses: cachix/cachix-action@v15
      with:
        name: tweag-haskell-libs
        authToken: '${{ secrets.CACHIX_TWEAG_HASKELL_LIBS }}'
    - name: Build Nix dependencies
      run: nix develop --command bash -c "echo '=== Nix dependencies installed ==='"
    - name: check formatting
      run: nix develop --command bash -c 'treefmt --ci'

  build:
    name: Build and test
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Setup Cachix
      uses: cachix/cachix-action@v15
      with:
        name: tweag-haskell-libs
        authToken: '${{ secrets.CACHIX_TWEAG_HASKELL_LIBS }}'
    - name: Cache Stack dependencies
      uses: actions/cache@v4
      with:
        path: ~/.stack
        key: stack-deps-${{ runner.os }}-${{ hashFiles('flake.lock') }}-v${{ env.cache-invalidation-key }}-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        restore-keys: stack-deps-${{ runner.os }}-${{ hashFiles('flake.lock') }}-v${{ env.cache-invalidation-key }}-${{ hashFiles('stack.yaml.lock') }}-
    - name: Build Nix dependencies
      run: nix develop --command bash -c "echo '=== Nix dependencies installed ==='"
    - name: Stack build
      run: nix develop --command bash -c "stack build"
    # - name: Stack test
    #   run: nix develop --command bash -c "stack test"
